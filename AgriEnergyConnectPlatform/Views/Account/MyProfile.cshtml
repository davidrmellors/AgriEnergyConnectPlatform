﻿@using Data.Extensions
@model IEnumerable<Data.Models.Product>

@{
    ViewBag.Title = "My Profile";
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/FarmerLayout.cshtml";
    }
}

<div class="">
    <div class="container mt-4">
        <div class="header text-start w-100 mb-5 mt-5">
            <h1 class="display-4 green-title">My Profile</h1>
        </div>

        <!-- Profile Edit Form -->
        <div class="card mb-4">
            <div class="card-header tab-nav-background">
                Edit Profile
            </div>
            <div class="card-body">
                <form method="post" action="@Url.Action("UpdateProfile", "Account")">
                    @Html.AntiForgeryToken()

                    <!-- Profile Edit Fields -->
                    <div class="form-group">
                        <label class="profile-label" for="Name">First Name</label>
                        <input type="text" class="form-control" id="Name" name="Name" value="@User.Identity.GetUserFirstName()" required>
                    </div>
                    <div class="form-group profile">
                        <label class="profile-label" for="Email">Email</label>
                        <input type="email" class="form-control" id="Email" name="Email" value="@User.Identity.GetUserEmail()" required>
                    </div>

                    <!-- Change Password Fields -->
                    <div class="form-group">
                        <label class="profile-label" for="CurrentPassword">Current Password</label>
                        <input type="password" class="form-control" id="CurrentPassword" name="CurrentPassword">
                    </div>
                    <div class="form-group">
                        <label class="profile-label" for="NewPassword">New Password</label>
                        <input type="password" class="form-control" id="NewPassword" name="NewPassword">
                    </div>
                    <div class="form-group">
                        <label class="profile-label" for="ConfirmPassword">Confirm New Password</label>
                        <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword">
                    </div>

                    <button type="submit" class="btn btn-success">Update Profile</button>
                </form>
            </div>
        </div>

        @if (User.IsInRole("Farmer"))
        {
            <button class="btn btn-success mb-4" type="button" data-bs-toggle="collapse" data-bs-target="#addProductForm" aria-expanded="false" aria-controls="addProductForm">
                Add New Product
            </button>

            <!-- Add New Product Form -->
            <div class="collapse" id="addProductForm">
                <div class="card mb-4">
                    <div class="card-header tab-nav-background">
                        Add New Product
                    </div>
                    <div class="card-body">
                        <form method="post" action="@Url.Action("AddProduct", "Marketplace")" enctype="multipart/form-data">
                            <div class="form-group">
                                <label class="profile-label" for="ProductName">Product Name</label>
                                <input type="text" class="form-control" id="ProductName" name="ProductName" required>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="ProductDescription">Product Description</label>
                                <textarea class="form-control" id="ProductDescription" name="ProductDescription" required></textarea>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="Category">Category</label>
                                <input type="text" class="form-control" id="Category" name="Category" required>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="ProductPrice">Price</label>
                                <input type="number" class="form-control" id="ProductPrice" name="ProductPrice" required>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="ProductStock">Stock</label>
                                <input type="number" class="form-control" id="ProductStock" name="ProductStock" required>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="ProductionDate">Production Date</label>
                                <input type="date" class="form-control" id="ProductionDate" name="ProductionDate" required>
                            </div>
                            <div class="form-group">
                                <label class="profile-label" for="ProductImage">Product Image</label>
                                <input type="file" class="form-control" id="ProductImage" name="ProductImage" accept="image/*" required>
                            </div>
                            <button type="submit" class="btn btn-success">Add Product</button>
                        </form>
                    </div>
                </div>
            </div>

            <div class="row">
                @foreach (var product in Model)
                {
                    <div class="col-md-6 col-lg-3 mb-4">
                        <div class="card product-card">
                            <img src="@Url.Content(product.ProductImagePath)" class="card-img-top" alt="@product.ProductName">
                            <div class="card-body">
                                <h5 class="card-title product-label">@product.ProductName</h5>
                                <p class="card-text product-price-label">R @product.Price</p>
                                <p class="card-text product-label">Production Date: @product.ProductionDate.ToShortDateString()</p>
                                <p class="card-text product-label">Category: @product.Category</p>
                                <p class="card-text product-label">Qty: @product.Stock</p>

                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-secondary edit-product-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editProductModal"
                                            data-product-id="@product.ProductID"
                                            data-product-name="@product.ProductName"
                                            data-product-description="@product.ProductDescription"
                                            data-category="@product.Category"
                                            data-price="@product.Price"
                                            data-stock="@product.Stock"
                                            data-production-date="@product.ProductionDate.ToString("yyyy-MM-dd")">
                                        Edit
                                    </button>
                                    <button class="btn btn-danger delete-product-btn"
                                            onclick="confirmDelete(@product.ProductID)">
                                        Delete
                                    </button>
                                </div>
                                <form id="deleteForm-@product.ProductID" method="post" action="@Url.Action("DeleteProduct", "Marketplace")" style="display:none;">
                                    <input type="hidden" name="productId" value="@product.ProductID" />
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header tab-nav-background">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProductForm" method="post" action="@Url.Action("UpdateProduct", "Marketplace")" enctype="multipart/form-data">
                    <input type="hidden" id="editProductId" name="productId" />
                    <div class="form-group">
                        <label for="editProductName" class="profile-label">Product Name:</label>
                        <input type="text" class="form-control" id="editProductName" name="productName" required />
                    </div>
                    <div class="form-group">
                        <label for="editProductDescription" class="profile-label">Product Description:</label>
                        <textarea class="form-control" id="editProductDescription" name="productDescription" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editCategory" class="profile-label">Category:</label>
                        <input type="text" class="form-control" id="editCategory" name="category" required />
                    </div>
                    <div class="form-group">
                        <label for="editPrice" class="profile-label">Price:</label>
                        <input type="number" step="0.01" class="form-control" id="editPrice" name="price" required />
                    </div>
                    <div class="form-group">
                        <label for="editStock" class="profile-label">Stock:</label>
                        <input type="number" class="form-control" id="editStock" name="stock" required />
                    </div>
                    <div class="form-group">
                        <label for="editProductionDate" class="profile-label">Production Date:</label>
                        <input type="date" class="form-control" id="editProductionDate" name="productionDate" required />
                    </div>
                    <div class="form-group">
                        <label for="editProductImage" class="profile-label">Product Image:</label>
                        <input type="file" class="form-control" id="editProductImage" name="productImage" accept="image/*" />
                    </div>
                    <button type="submit" class="btn btn-success">Update Product</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var editProductModal = document.getElementById('editProductModal');
        editProductModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var productId = button.getAttribute('data-product-id');
            var productName = button.getAttribute('data-product-name');
            var productDescription = button.getAttribute('data-product-description');
            var category = button.getAttribute('data-category');
            var price = button.getAttribute('data-price').replace(',', '.');
            var stock = button.getAttribute('data-stock');
            var productionDate = button.getAttribute('data-production-date');

            var modalTitle = editProductModal.querySelector('.modal-title');
            var editProductIdInput = document.getElementById('editProductId');
            var editProductNameInput = document.getElementById('editProductName');
            var editProductDescriptionTextarea = document.getElementById('editProductDescription');
            var editCategoryInput = document.getElementById('editCategory');
            var editPriceInput = document.getElementById('editPrice');
            var editStockInput = document.getElementById('editStock');
            var editProductionDateInput = document.getElementById('editProductionDate');

            modalTitle.textContent = 'Edit Product: ' + productName;
            editProductIdInput.value = productId;
            editProductNameInput.value = productName;
            editProductDescriptionTextarea.value = productDescription;
            editCategoryInput.value = category;
            editPriceInput.value = price;
            editStockInput.value = stock;
            editProductionDateInput.value = productionDate;
        });
    });

    function confirmDelete(productId) {
        if (confirm("Are you sure you want to delete this product?")) {
            document.getElementById('deleteForm-' + productId).submit();
        }
    }
</script>
